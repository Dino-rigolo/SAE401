1747857201
8a0c4faa9771445189035ca844487507-phpdoc%3A691df4a6e4657195cf96d67d30a0835b-b323c885848f48154e903879cf8002d3
s:15404:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:12:"ViewHome.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"b323c885848f48154e903879cf8002d3";s:39:" phpDocumentor\Reflection\Php\File path";s:17:"view/ViewHome.php";s:41:" phpDocumentor\Reflection\Php\File source";s:8667:"<?php
/**
 * Home Page View
 * 
 * Displays the main landing page of the BikeStore application featuring:
 * - Welcome banner with call-to-action
 * - Interactive map showing all store locations
 * - List of all stores with details
 * 
 * @package BikeStore\Views
 * @author Your Name
 * @version 1.0
 */

/**
 * Include header template
 */
include_once('www/header.inc.php');
?>

<div class="intro text-center text-white" style="background-color: #333; padding: 50px 0;">
    <h2>Welcome to</h2>
    <h1>BikeStores</h1>
    <h2>Ride Beyond Limits</h2>
    <a href="/SAE401/catalogue" class="btn btn-success rounded-pill mt-3 px-4 py-2">Our bikes</a>
</div>

<h2 class="text-center my-4" style="color: #333;">The BikeStores shops</h2>
<div class="container">
    <div class="card shadow mb-5" style="border: none;">
        <div class="card-body p-0">
            <div id="map" style="height: 500px;"></div>
        </div>
    </div>
</div>


<h2 class="text-center my-4" style="color: #333;">List of shops</h2>
<div class="container">
    <div class="row g-4" id="shop-container">

        <div class="col-12 text-center">
            <div class="spinner-border text-success" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p>Chargement des boutiques...</p>
        </div>
    </div>
</div>

<!-- Inclusion des bibliothèques -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<script type="text/javascript">
    var map; 
    window.addEventListener('load', function() {
        if (typeof L === 'undefined') {
            console.error("Leaflet n'est pas chargé correctement");
            document.getElementById("map").innerHTML = "Erreur de chargement de la carte";
            return;
        }
        
        console.log("Initialisation de la carte");

        map = L.map('map', {
            center: [46.603354, 1.888334],
            zoom: 6,
            zoomControl: true
        });
        
        L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',
            subdomains: 'abcd',
            maxZoom: 19
        }).addTo(map);
        
        console.log("Carte initialisée");
        
        setTimeout(function() {
            map.invalidateSize(true);
            console.log("Carte redimensionnée");
        }, 500);
        
        loadShops();
        
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                function(position) {
                    var lat = position.coords.latitude;
                    var lng = position.coords.longitude;
                    console.log("Position utilisateur:", lat, lng);

                    var userIcon = L.icon({
                        iconUrl: '/SAE401/www/images/user-marker.png',
                        iconSize: [32, 32], 
                        iconAnchor: [16, 32], 
                        popupAnchor: [0, -32] 
                    });

                    var userMarker = L.marker([lat, lng], { icon: userIcon }).addTo(map);
                    userMarker.bindPopup("<b>Votre position</b>").openPopup();
                    
                    map.setView([lat, lng], 8);
                },
                function(error) {
                    console.error("Erreur de géolocalisation:", error);
                }
            );
        }
    });
    
    function loadShops() {
        console.log("Chargement des boutiques");
        $.ajax({
            url: "/SAE401/api/ApiStores.php?action=getall",
            type: "GET",
            dataType: "json",
            success: function(data) {
                console.log("Boutiques reçues:", data);
                $("#shop-container").empty();
                if (!data || data.length === 0 || (data.error && data.error === 'No stores found')) {
                    $("#shop-container").html('<div class="col-12"><div class="alert alert-info text-center">Aucune boutique disponible</div></div>');
                    return;
                }
                $.each(data, function(index, store) {
                    var storeHtml = '<div class="col-lg-4 col-md-6 col-sm-12">' +
                        '<div class="card h-100 transition-card">' +
                        '<div class="card-body">' +
                        '<a href="/SAE401/shop/' + store.store_id + '" class="text-decoration-none text-dark">' +
                        '<h5 class="card-title">' + (store.store_name || 'Nom inconnu') + '</h5>' +
                        '<p class="card-text">' + (store.street || 'Adresse inconnue') + '</p>' +
                        '<p class="card-text">' + (store.zip_code || '') + ' ' + (store.city || '') + '</p>' +
                        '</a>' +
                        '</div>' +
                        '<div class="card-footer bg-transparent">' +
                        '<a href="/SAE401/shop/' + store.store_id + '" class="btn btn-outline-primary w-100">View details</a>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                    
                    $("#shop-container").append(storeHtml);
                    if (map) {
                        var address = encodeURIComponent((store.street || '') + ', ' + (store.zip_code || '') + ' ' + (store.city || ''));
                        console.log("Géocodage pour:", store.store_name, "Adresse:", address);                 
                        $.getJSON('https://nominatim.openstreetmap.org/search?format=json&q=' + address, function(results) {
                            if (results && results.length > 0) {
                                console.log("Géocodage réussi pour:", store.store_name, results[0]);
                                
                                var lat = parseFloat(results[0].lat);
                                var lon = parseFloat(results[0].lon);
                                
                                if (!isNaN(lat) && !isNaN(lon)) {
                                    var storeIcon = L.icon({
                                        iconUrl: '/SAE401/www/images/store-marker.png',
                                        iconSize: [32, 32],
                                        iconAnchor: [16, 32],
                                        popupAnchor: [0, -32]
                                    });

                                    var storeMarker = L.marker([lat, lon], { icon: storeIcon }).addTo(map);
                                    storeMarker.bindPopup(
                                        '<div class="text-center">' +
                                        '<h5>' + store.store_name + '</h5>' +
                                        '<p>' + store.street + '<br>' + store.zip_code + ' ' + store.city + '</p>' +
                                        '<a href="/SAE401/shop/' + store.store_id + '" class="btn btn-sm btn-success">View the shop</a>' +
                                        '</div>'
                                    );
                                } else {
                                    console.warn("Coordonnées invalides pour:", store.store_name);
                                }
                            } else {
                                console.warn("Géocodage échoué pour:", store.store_name);
                            }
                        }).fail(function(jqXHR, textStatus, errorThrown) {
                            console.error("Erreur de géocodage pour:", store.store_name, errorThrown);
                        });
                    } else {
                        console.error("La carte n'est pas initialisée");
                    }
                });
            },
            error: function(xhr, status, error) {
                console.error("Erreur lors du chargement des boutiques:", status, error);
                $("#shop-container").html('<div class="col-12"><div class="alert alert-danger text-center">Erreur lors du chargement des boutiques</div></div>');
            }
        });
    }
</script>

<?php
/**
 * Include footer template
 */
include_once('www/footer.inc.php');
?>";s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:14:"Home Page View";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:187:"Displays the main landing page of the BikeStore application featuring:
- Welcome banner with call-to-action
- Interactive map showing all store locations
- List of all stores with details";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:15:"BikeStore\Views";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:14:" * description";N;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:9:"Your Name";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:0:"";}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Version":3:{s:7:" * name";s:7:"version";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:55:" phpDocumentor\Reflection\DocBlock\Tags\Version version";s:3:"1.0";}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";